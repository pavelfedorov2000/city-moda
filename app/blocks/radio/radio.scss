.radio {
	$this: &;

	&-box {
		width: 1px;
		height: 1px;
		overflow: hidden;
		position: absolute;
		clip: rect(0 0 0 0);

		&:checked~#{$this}-style {
			border-color: var(--dark);

			&:before {
				content: '';
				width: 0.9rem;
				height: 0.7rem;
				@extend %pos-center-xy;
				background-image: url(../images/icons/check.svg);
				@extend %bg-contain;
			}
		}
	}

	&-style {
		@include round(var(--icon-size));
		position: relative;
		flex-shrink: 0;
		border: 0.1rem solid var(--gray-c0);
	}

	&-text {
		transition: $transition;
		transition-property: background-color, color;
	}

	&--type {
		&_size {
			#{$this} {
				&-text {
					@extend %flex-center;
					width: 3.5rem;
					height: 3.5rem;
					text-align: center;
					border: 0.1rem solid var(--dark);
					cursor: pointer;

					@media (any-hover: hover) {
						&:hover {
							background-color: var(--dark);
							color: #fff;
						}
					}
				}

				&-box {
					&:checked+#{$this}-text {
						background-color: var(--dark);
						color: #fff;
					}

					&:disabled {
						&+#{$this}-text {
							position: relative;
							color: var(--gray);
							border-color: var(--gray);
							cursor: not-allowed;

							&:before {
								content: '';
								position: absolute;
								top: -0.7rem;
								left: var(--offset);
								width: 0.1rem;
								height: 4.735rem;
								background-color: var(--gray);
								transform: rotate(-45deg);
							}
						}
					}
				}
			}
		}

		&_color {
			#{$this} {
				&-style {
					@extend %flex-center;
					@include round(var(--icon-size_ls));
					border-width: 0;
					border-style: solid;

					&--checked {
						border-width: 0.1rem;
					}

					span {
						@include round(2.2rem);
					}
				}

				&-box {
					&:checked~#{$this}-style {
						&:before {
							display: none;
						}
					}
				}
			}
		}
	}
}
