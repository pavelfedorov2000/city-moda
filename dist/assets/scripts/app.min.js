"use strict";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var app = {
  pathToLibsFiles: './assets/libs'
};
window.app = app; // polyfills
// before polyfills

(function (arr) {
  arr.forEach(function (item) {
    if (item.hasOwnProperty('before')) {
      return;
    }

    Object.defineProperty(item, 'before', {
      configurable: true,
      enumerable: true,
      writable: true,
      value: function before() {
        // eslint-disable-next-line prefer-rest-params
        var argArr = Array.prototype.slice.call(arguments);
        var docFrag = document.createDocumentFragment();
        argArr.forEach(function (argItem) {
          var isNode = argItem instanceof Node;
          docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
        });
        this.parentNode.insertBefore(docFrag, this);
      }
    });
  });
})([Element.prototype, CharacterData.prototype, DocumentType.prototype]); // forEach polyfill


if (window.NodeList && !NodeList.prototype.forEach) {
  NodeList.prototype.forEach = function (callback, thisArg) {
    // eslint-disable-next-line no-param-reassign
    thisArg = thisArg || window;

    for (var i = 0; i < this.length; i++) {
      callback.call(thisArg, this[i], i, this);
    }
  };
}

app.asideFilters = {
  name: 'asideFilters',
  description: 'your script description',
  init: function init() {
    var asideFiltersItemDropTextMap = new Map();
    asideFiltersItemDropTextMap.set(true, 'Свернуть');
    asideFiltersItemDropTextMap.set(false, 'Развернуть'); // Аккордеон

    $('.aside-filters__item-drop').on('click', function () {
      var $asideFiltersItemDrop = $(this);
      var $closestListItem = $asideFiltersItemDrop.closest('li');
      var $asideFiltersItemContent = $closestListItem.hasClass('aside-filters__item') ? $asideFiltersItemDrop.closest('li').find('ul').first() : $asideFiltersItemDrop.closest('li').next();

      if ($asideFiltersItemDrop.attr('aria-expanded') === 'false') {
        $asideFiltersItemDrop.attr('aria-expanded', true);
        $asideFiltersItemDrop.attr('aria-label', asideFiltersItemDropTextMap.get(true));
        $asideFiltersItemContent.slideDown();
      } else {
        $asideFiltersItemDrop.attr('aria-expanded', false);
        $asideFiltersItemDrop.attr('aria-label', asideFiltersItemDropTextMap.get(false));
        $asideFiltersItemContent.slideUp();
      }
    });
    var catalogAside = document.querySelector('.catalog__aside');

    function fixAsideFilters() {
      if (window.innerWidth > 1024) {
        new StickySidebar('.catalog__aside', {
          topSpacing: 20,
          bottomSpacing: 20,
          containerSelector: '.catalog__inner',
          innerWrapperSelector: '.aside-filters'
        });
      }
    }

    if (!catalogAside) return;
    fixAsideFilters();
    window.addEventListener('resize', function () {
      fixAsideFilters();
    });
  }
};
app.auth = {
  name: 'auth',
  description: 'your script description',
  init: function init() {
    // Логика задизейбленной кнопки
    $('#auth input').on('keyup', function () {
      var $input = $(this);
      var inputVal = $input.val();
      var $form = $input.closest('form');
      var $inputs = $form.find('input');
      var $submitBtn = $form.find('button[type="submit"]');

      if (inputVal !== '' && $inputs.val() !== '') {
        $submitBtn.prop('disabled', false);
      } else {
        $submitBtn.prop('disabled', true);
      }
    }); // password input visibility toggle

    $('.pass-btn').on('click', function () {
      var $passBtn = $(this);
      var $inputWrap = $passBtn.closest('.input-wrap');
      var $input = $inputWrap.find('input');

      if ($passBtn.hasClass('show')) {
        $input.attr('type', 'text');
        $passBtn.removeClass('show');
        $passBtn.addClass('hide');
      } else {
        $input.attr('type', 'password');
        $passBtn.removeClass('hide');
        $passBtn.addClass('show');
      }
    }); // toogle phone / email enter

    $('.aside-popup__link-btn').on('click', function () {
      var $linkBtn = $(this);
      var attr = $linkBtn.data('enter');
      var $tabsContent = $linkBtn.parent();
      $tabsContent.hide();
      $("#".concat(attr)).show();
    }); // Восстановление пароля открыть

    $('.remind-password').on('click', function () {
      var $remindPassBtn = $(this);
      var $asidePopup = $remindPassBtn.closest('.aside-popup');
      $asidePopup.removeClass('active');
      $('#password-recovery').addClass('active');
    }); // Восстановление пароля закрыть

    $('#password-recovery .aside-popup__back-btn').on('click', function () {
      $('#password-recovery').removeClass('active');
      $('#auth-popup').addClass('active');
    });
  }
};
app.basketTotal = {
  name: 'basketTotal',
  description: 'basketTotal',
  init: function init() {
    var basketTotal = document.querySelector('.basket-total');

    function fixBasketTable() {
      if (window.innerWidth > 1024) {
        new StickySidebar('.basket-total', {
          topSpacing: 20,
          bottomSpacing: 20,
          containerSelector: '.basket-page__inner',
          innerWrapperSelector: '.basket-total__inner' //scrollContainer: '#main-viewport'

        });
      }
    }

    if (!basketTotal) return;
    fixBasketTable();
    window.addEventListener('resize', function () {
      fixBasketTable();
    });
  }
};
app.blogTextSlider = {
  name: 'blogTextSlider',
  description: 'your script description',
  init: function init() {
    new Swiper('.blog-text__slider', {
      loop: true,
      spaceBetween: 27,
      speed: 1000,
      lazy: true,
      navigation: {
        nextEl: '.blog-text__slider .swiper-button-next',
        prevEl: '.blog-text__slider .swiper-button-prev'
      },
      breakpoints: {
        576: {
          slidesPerView: 2
        }
      },
      on: {
        slideChange: function slideChange() {
          new LazyLoad();
        }
      }
    });
  }
};
app.burger = {
  name: 'burger',
  description: 'burger-btn and burger-menu logic',
  init: function init() {
    $('.burger-btn').on('click', function () {
      $('body').addClass('_lock');
      $('.burger-menu').addClass('active');
    });
    $('.burger-menu__close').on('click', function () {
      $('body').removeClass('_lock');
      $('.burger-menu').removeClass('active');
    });
    $('.burger-menu__list-toggle').on('click', function () {
      var $burgerMenuListToggle = $(this);
      var $burgerMenuListItem = $burgerMenuListToggle.closest('.burger-menu__list-item');
      var $burgerMenuListItemNotActive = $burgerMenuListItem.siblings();
      var $burgerMenuListItemNotActiveToggle = $burgerMenuListItemNotActive.find('.burger-menu__list-toggle');
      var $burgerMenuListItemNotActiveList = $burgerMenuListItemNotActive.find('ul');
      var $burgerMenuSublist = $burgerMenuListItem.find('ul');
      $burgerMenuListItemNotActiveToggle.attr('aria-expanded', false);
      $burgerMenuListItemNotActiveList.slideUp();

      if ($burgerMenuListToggle.attr('aria-expanded') === 'false') {
        $burgerMenuListToggle.attr('aria-expanded', true);
        $burgerMenuSublist.slideDown();
      } else {
        $burgerMenuListToggle.attr('aria-expanded', false);
        $burgerMenuSublist.slideUp();
      }
    });
    $('.header__search-btn').on('click', function () {
      var $searchBtn = $(this);
      var $headerMainBottom = $('.header__main-bottom');
      var $searchFormInput = $headerMainBottom.find('.search-form__input');

      if ($searchBtn.attr('aria-expanded') === 'false') {
        $searchBtn.attr('aria-expanded', true);
        $headerMainBottom.addClass('active');
        $searchFormInput.addClass('active');
      } else {
        $searchBtn.attr('aria-expanded', false);
        $headerMainBottom.removeClass('active');
        $searchFormInput.removeClass('active');
      }
    });
    $('.header-info-line__close').on('click', function () {
      var $marqueeCloseBtn = $(this);
      var $marquee = $marqueeCloseBtn.parent();
      $marquee.slideUp();
    });
  }
};
app.catalogCard = {
  name: 'catalogCard',
  description: 'your script description',
  init: function init() {
    // Кнопка добавить в избранное
    $('.favorite-btn:not(:disabled):not(.disabled)').on('click', function () {
      var $favoriteBtn = $(this);
      $favoriteBtn.toggleClass('favorite');
      $favoriteBtn.addClass('animated');

      if ($favoriteBtn.hasClass('favorite')) {
        $favoriteBtn.attr('aria-label', 'Убрать из избранного');
      } else {
        $favoriteBtn.attr('aria-label', 'Добавить в избранное');
      }

      setTimeout(function () {
        $favoriteBtn.removeClass('animated');
      }, 300);
    });
    $('.catalog-view__btn').on('click', function () {
      var $catalogViewBtn = $(this);
      var $catalogViewBtnNotActive = $catalogViewBtn.siblings();
      var $catalogList = $('.catalog-list');
      $catalogViewBtnNotActive.removeClass('active');
      $catalogViewBtn.addClass('active');

      if ($('.col-btn').hasClass('active')) {
        $catalogList.addClass('catalog-list--two-cols');
      } else {
        $catalogList.removeClass('catalog-list--two-cols');
      }

      if ($('.row-btn').hasClass('active')) {
        $catalogList.addClass('catalog-list--row');
      } else {
        $catalogList.removeClass('catalog-list--row');
      }
    });

    if ($(window).width() < 768) {
      $('.catalog-list').addClass('catalog-list--two-cols');
      $('.col-btn').addClass('active');
    }

    $(window).resize(function () {
      if ($(window).width() < 768) {
        $('.catalog-list').addClass('catalog-list--two-cols');
        $('.col-btn').addClass('active');
      }
    });
  }
};
app.catalogFilters = {
  name: 'catalogFilters',
  description: 'your script description',
  init: function init() {
    $('.catalog-filter__toggle').on('click', function () {
      var $catalogFilterToggle = $(this);
      var $catalogFilter = $catalogFilterToggle.closest('.catalog-filter');
      var $catalogFilterDrop = $catalogFilter.find('.catalog-filter__drop');
      var $catalogFilterNotActive = $catalogFilter.siblings();
      var $catalogFilterToggleNotActive = $catalogFilterNotActive.find('.catalog-filter__toggle');
      var $catalogFilterDropNotActive = $catalogFilterNotActive.find('.catalog-filter__drop');
      $catalogFilterToggleNotActive.attr('aria-expanded', false);
      $catalogFilterDropNotActive.slideUp();

      if ($catalogFilterToggle.attr('aria-expanded') === 'false') {
        $catalogFilterToggle.attr('aria-expanded', true);
        $catalogFilterDrop.slideDown();
      } else {
        $catalogFilterToggle.attr('aria-expanded', false);
        $catalogFilterDrop.slideUp();
      }
    });
    $(document).on('mouseup', function (e) {
      var $catalogFilterToggleActive = $('.catalog-filter__toggle[aria-expanded="true"]');
      var $catalogFilter = $catalogFilterToggleActive.closest('.catalog-filter');
      var $catalogFilterDrop = $catalogFilter.find('.catalog-filter__drop');

      if (!$catalogFilter.is(e.target) && $catalogFilter.has(e.target).length === 0) {
        $catalogFilterToggleActive.attr('aria-expanded', false);
        $catalogFilterDrop.slideUp();
      }
    }); // Подсчет отмеченных чекбоксом

    $('.catalog-filters__item--material input[type="checkbox"], .catalog-filters__item--color input[type="checkbox"], .catalog-filters__item--brand input[type="checkbox"], .catalog-filters__item--details input[type="checkbox"], .catalog-filters__item--style input[type="checkbox"], .catalog-filters__item--decor input[type="checkbox"]').on('click', function () {
      var $checkbox = $(this);
      var $catalogFilter = $checkbox.closest('.catalog-filter');
      var className = $catalogFilter.attr('class').split(' ').join('.');
      var checkedItems = $(".".concat(className, " input:checkbox:checked")).length;
      var $catalogFilterToggle = $catalogFilter.find('.catalog-filter__toggle');
      var $filterOutput = $catalogFilterToggle.find('.filter-output');

      if (checkedItems > 0) {
        $filterOutput.text("(".concat(checkedItems, ")"));
        $catalogFilterToggle.css('font-weight', '600');
      } else {
        $catalogFilterToggle.css('font-weight', '400');
        $filterOutput.text('');
      }
    }); // Кнопка сброса общая

    $('.catalog-filters__reset-btn').on('click', function () {
      var $catalogFiltersResetBtn = $(this);
      var $catalogFilters = $catalogFiltersResetBtn.closest('.catalog-filters');
      var $catalogFilterToggle = $catalogFilters.find('.catalog-filter__toggle');
      var $catalogFilterDrop = $catalogFilters.find('.catalog-filter__drop');
      $('.catalog-filters__item--sort').find('.catalog-filter__title').text('Сортировать');
      $catalogFilterToggle.css('font-weight', '400');
      $catalogFilterToggle.find('.filter-output').text('');
      $catalogFilterToggle.attr('aria-expanded', false);
      $catalogFilterDrop.slideUp();
    }); // Кнопка сброса в отдельном фильтре

    $('.catalog-drop-filter__btn[type=reset]').on('click', function () {
      var $catalogDropFilterResetBtn = $(this);
      var $catalogFilterToggle = $catalogDropFilterResetBtn.closest('.catalog-filter').find('.catalog-filter__toggle');
      var $filterOutput = $catalogFilterToggle.find('.filter-output');
      $catalogFilterToggle.css('font-weight', '400');
      $filterOutput.text('');
    }); // Открытие фильтров (тач-скрины)

    $('.filters-btn').on('click', function () {
      var $filtersBtn = $(this);
      var $catalogFilters = $('body').find('.catalog-filters');
      $filtersBtn.attr('aria-expanded', true);
      $('body').addClass('_lock');
      $catalogFilters.addClass('active');
    }); // Закрытие фильтров (тач-скрины)

    $('.catalog-filters__close').on('click', function () {
      var $catalogFiltersClose = $(this);
      var $catalogFilters = $catalogFiltersClose.closest('.catalog-filters');
      $('body').removeClass('_lock');
      $catalogFilters.removeClass('active');
      $('.filters-btn').attr('aria-expanded', false);
    });
    $('.catalog-filter__toggle').on('click', function () {
      if ($(window).width() < 1025) {
        var $catalogFilterToggle = $(this);
        var $catalogFilterTitle = $catalogFilterToggle.closest('.catalog-filter__title');
        var $catalogFilterToggleText = $catalogFilterToggle.children().first().text();
        var $catalogFilter = $catalogFilterToggle.closest('.catalog-filter');
        var $catalogFilterNotActive = $catalogFilter.siblings();
        var $catalogFilterDrop = $catalogFilter.find('.catalog-filter__drop');
        var $catalogFilters = $catalogFilter.closest('.catalog-filters');
        var $catalogFiltersBackBtn = $catalogFilters.find('.catalog-filters__back-btn');
        var $catalogFiltersTitle = $catalogFilters.find('.catalog-filters__title');
        $catalogFiltersBackBtn.show();
        $catalogFiltersTitle.text($catalogFilterToggleText);
        $catalogFilterNotActive.hide();
        $catalogFilterTitle.hide();
        $catalogFilterDrop.show();
      }
    }); // Кнопка назад на мобиле

    $('.catalog-filters__back-btn').on('click', function () {
      var $catalogFiltersBackBtn = $(this);
      var $catalogFilters = $catalogFiltersBackBtn.closest('.catalog-filters');
      var $catalogFiltersTitle = $catalogFilters.find('.catalog-filters__title');
      var $catalogFiltersItem = $catalogFilters.find('.catalog-filters__item');
      var $catalogFiltersItemTitle = $catalogFiltersItem.find('.catalog-filter__title');
      var $catalogFiltersItemDrop = $catalogFiltersItem.find('.catalog-filter__drop');
      $catalogFiltersBackBtn.hide();
      $catalogFiltersTitle.text('Фильтры');
      $catalogFiltersItem.show();
      $catalogFiltersItemTitle.show();
      $catalogFiltersItemTitle.removeClass('active');
      $catalogFiltersItemDrop.hide();
    }); // Фильтр размер

    var checkedSizes = [];
    $('.catalog-filters__item--size input[type="checkbox"]').on('click', function () {
      var $sizeCheckbox = $(this);
      var $sizeCheckboxVal = $sizeCheckbox.closest('.catalog-drop-filter__item').find('.check-text').text();
      var $catalogFiltersItemTitle = $sizeCheckbox.closest('.catalog-filters__item').find('.catalog-filter__title');
      var $filterOutput = $catalogFiltersItemTitle.find('.filter-output');

      if ($sizeCheckbox.is(':checked')) {
        checkedSizes.push($sizeCheckboxVal);
      } else {
        checkedSizes.splice(checkedSizes.indexOf($sizeCheckboxVal), 1);
      }

      if (checkedSizes.length > 0) {
        $filterOutput.text("(".concat(checkedSizes.sort().join(', '), ")"));
        $catalogFiltersItemTitle.css('font-weight', '600');
      } else {
        $catalogFiltersItemTitle.css('font-weight', '400');
        $filterOutput.text('');
      }
    }); // Фильтр сортировка

    $('.catalog-filters__item--sort .catalog-drop-filter__item').on('click', function () {
      var $catalogDropFilterItem = $(this);
      var $catalogDropFilterItemRadioText = $catalogDropFilterItem.find('.radio-text').text();
      var $catalogDropFilter = $catalogDropFilterItem.closest('.catalog-drop-filter');
      var $catalogFilterToggle = $catalogDropFilterItem.closest('.catalog-filter').find('.catalog-filter__toggle');
      $catalogFilterToggle.css('font-weight', '600');
      $catalogFilterToggle.children().first().text($catalogDropFilterItemRadioText);

      if ($(window).width() > 1024) {
        $catalogDropFilter.slideUp();
        $catalogFilterToggle.attr('aria-expanded', false);
        $catalogFilterToggle.removeClass('catalog-filter__toggle--bold');
      }
    }); // Фильтр цены

    $('input[name=price_from]').on('input change', function () {
      var $input = $(this);
      var inputVal = $input.val();
      var $catalogFilterToggle = $input.closest('.catalog-filter').find('.catalog-filter__toggle');

      if (inputVal !== '') {
        $('#price_from').text("".concat(inputVal, " -"));
        $catalogFilterToggle.css('font-weight', '600');
      } else {
        $('#price_from').text('');
      }
    });
    $('input[name=price_to]').on('input change', function () {
      var $input = $(this);
      var inputVal = $input.val();

      if (inputVal !== '') {
        $('#price_to').text("".concat(inputVal));
      } else {
        $('#price_to').text('');
      }
    });
  }
};
app.checkout = {
  name: 'checkout',
  description: 'your script description',
  init: function init() {
    $('.checkout-radio').on('click', function () {
      var $checkoutRadio = $(this);
      var $checkoutRadioNotActive = $checkoutRadio.siblings();
      $checkoutRadioNotActive.removeClass('checkout-radio--checked');
      $checkoutRadio.addClass('checkout-radio--checked');
      $checkoutRadioNotActive.find('.checkout-radio__hidden').slideUp();
      $checkoutRadio.find('.checkout-radio__hidden').slideDown();
    });
  }
};
app.counter = {
  name: 'counter',
  description: 'counter',
  init: function init() {
    $('.minus-btn').on('click', function (e) {
      e.preventDefault();
      var $this = $(this);
      var $input = $this.next();
      var value = parseInt($input.val());

      while (value > 0) {
        value -= 1;
        break;
      }

      $input.val(value);
    });
    $('.plus-btn').on('click', function (e) {
      e.preventDefault();
      var $this = $(this);
      var $input = $this.prev();
      var value = parseInt($input.val());
      value += 1;
      $input.val(value);
    });
  }
};
app.faq = {
  name: 'faq',
  description: 'your script description',
  init: function init() {
    $('.accordion-item__toggle').on('click', function () {
      var $accordionItemToggle = $(this);
      var $accordionItem = $accordionItemToggle.closest('.accordion-item');
      var $accordionItemContent = $accordionItem.find('.accordion-item__content');

      if ($accordionItemToggle.attr('aria-expanded') === 'false') {
        $accordionItemToggle.attr('aria-expanded', true);
        $accordionItemContent.slideDown();
      } else {
        $accordionItemToggle.attr('aria-expanded', false);
        $accordionItemContent.slideUp();
      }
    });
  }
};
app.yourScriptName = {
  name: 'yourScriptName',
  description: 'your script description',
  init: function init() {// your code
  }
};
app.feedback = {
  name: 'feedback',
  description: 'your script description',
  init: function init() {
    $('.feedback__form input').on('change', function () {
      var $input = $(this);
      var inputVal = $input.val();
      var $form = $input.closest('form');
      var $inputs = $form.find('input');
      var $submitBtn = $form.find('button[type="submit"]');
      var $agreeCheckboxes = $form.find('input[type="checkbox"]');

      if (inputVal !== '' && $inputs.val() !== '' && $agreeCheckboxes.is(':checked')) {
        $submitBtn.prop('disabled', false);
      } else {
        $submitBtn.prop('disabled', true);
      }
    });
  }
};
/* app.yourScriptName = {
  name: 'yourScriptName',
  description: 'your script description',
  init() {
    // your code
  },
}; */

app.iconsSlider = {
  name: 'iconsSlider',
  description: 'your script description',
  init: function init() {
    new Swiper('.icons-slider', {
      slidesPerView: 'auto',
      freeMode: true
    });
  }
};
app.instagram = {
  name: 'instagram',
  description: 'your script description',
  init: function init() {
    new Swiper('.instagram-slider', {
      loop: true,
      slidesPerView: 1,
      spaceBetween: 52,
      speed: 1000,
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev'
      },
      breakpoints: {
        501: {
          slidesPerView: 2
        },
        768: {
          slidesPerView: 3,
          spaceBetween: 30
        },
        1025: {
          slidesPerView: 4,
          spaceBetween: 52
        }
      },
      on: {
        slideChange: function slideChange() {
          new LazyLoad();
        }
      }
    });
  }
};
app.yourScriptName = {
  name: 'yourScriptName',
  description: 'your script description',
  init: function init() {// your code
  }
};
app.otherNews = {
  name: 'otherNews',
  description: 'your script description',
  init: function init() {
    new Swiper('.other-news-slider', {
      loop: true,
      spaceBetween: 20,
      speed: 1000,
      //lazy: true,
      navigation: {
        nextEl: '.other-news .swiper-button-next',
        prevEl: '.other-news .swiper-button-prev'
      },
      breakpoints: {
        768: {
          slidesPerView: 2,
          spaceBetween: 52
        }
      },
      on: {
        slideChange: function slideChange() {
          new LazyLoad();
        }
      }
    });
  }
};
app.pageNav = {
  name: 'pageNav',
  description: 'pageNav',
  init: function init() {
    var pageNav = document.querySelector('.page-nav');

    function fixPageNav() {
      if (window.innerWidth > 1024) {
        new StickySidebar('.page-nav', {
          topSpacing: 20,
          bottomSpacing: 20,
          containerSelector: '.profile-page__inner',
          innerWrapperSelector: '.page-nav__list' //scrollContainer: '#main-viewport'

        });
      }
    }

    if (!pageNav) return;
    fixPageNav();
    window.addEventListener('resize', function () {
      fixPageNav();
    });
  }
};
app.pageup = {
  name: 'pageup',
  description: 'your script description',
  init: function init() {
    var pageUp = document.querySelector('.pageup');
    if (!pageUp) return;
    pageUp.addEventListener('click', function () {
      window.scrollTo({
        top: 0,
        behavior: "smooth"
      });
    });
    var footer = document.querySelector('.footer');
    var footerOffset = footer.offsetTop;
    var footerHeight = footer.getBoundingClientRect().height;
    var page = document.querySelector('.page');
    window.addEventListener('scroll', function () {
      if (window.scrollY > window.innerHeight) {
        pageUp.classList.add('active');
      } else {
        pageUp.classList.remove('active');
      }

      if (window.scrollY >= footerOffset - footerHeight - page.children[page.children.length - 1].getBoundingClientRect().height) {
        pageUp.classList.add('in-footer');
      } else {
        pageUp.classList.remove('in-footer');
      }
    });
  }
};
app.popup = {
  name: 'popup',
  description: 'your script description',
  init: function init() {
    $('.region-header__value').on('click', function () {
      var $regionHeaderValue = $(this);
      var $regionHeaderDrop = $regionHeaderValue.next();

      if ($regionHeaderValue.attr('aria-expanded') === 'false') {
        $regionHeaderValue.attr('aria-expanded', true);
        $regionHeaderDrop.slideDown();
      } else {
        $regionHeaderValue.attr('aria-expanded', false);
        $regionHeaderDrop.slideUp();
      }
    });
    $('.region-header__drop-item').on('click', function () {
      var $regionHeaderDropItem = $(this);
      var regionHeaderDropItemText = $regionHeaderDropItem.text();
      var $regionHeaderDropItemNotActive = $regionHeaderDropItem.siblings();
      var $regionHeaderDrop = $regionHeaderDropItem.parent();
      var $regionHeaderValue = $regionHeaderDrop.prev();
      $regionHeaderValue.attr('aria-expanded', false);
      $regionHeaderValue.text(regionHeaderDropItemText);
      $regionHeaderDropItemNotActive.removeClass('active');
      $regionHeaderDropItem.addClass('active');
      $regionHeaderDrop.slideUp();
    }); // Открытие выезжающей справа корзины

    $('[data-popup]').on('click', function () {
      var $btn = $(this);
      $('body').addClass('_lock');
      $('html').addClass('disable-fix');
      $('.overlay').fadeIn('slow');
      $btn.attr('aria-expanded', true);
      $("#".concat($btn.attr('data-popup'))).addClass('active');
    }); // Закрытие выезжающей корзины и авторизации

    $('.aside-popup__close').on('click', function () {
      var $asidePopupClose = $(this);
      var $asidePopup = $asidePopupClose.closest('.aside-popup');
      $("[data-popup=\"".concat($asidePopup.attr('id'), "\"]")).attr('aria-expanded', false);
      $asidePopup.removeClass('active');
      $('.overlay').fadeOut();
      $('body').removeClass('_lock');
      $('html').removeClass('disable-fix');
    });
    $(document).on('mouseup', function (e) {
      var $asidePopupActive = $('.aside-popup.active');

      if (!$asidePopupActive.is(e.target) && $asidePopupActive.has(e.target).length === 0) {
        $("[data-popup=\"".concat($asidePopupActive.attr('id'), "\"]")).attr('aria-expanded', false);
        $asidePopupActive.removeClass('active');
        $('.overlay').fadeOut();
        $('body').removeClass('_lock');
        $('html').removeClass('disable-fix');
      }
    });
  }
};
app.productCard = {
  name: 'productCard',
  description: 'your script description',
  init: function init() {
    $('.product-color__item .radio-box').on('change', function () {
      var $productColorRadioCheckbox = $(this);
      var $productColorRadio = $productColorRadioCheckbox.closest('.radio');
      var $productColorRadioStyle = $productColorRadio.find('.radio-style');
      var $productColorRadioStyleNotActive = $productColorRadio.siblings().find('.radio-style');

      if ($productColorRadioCheckbox.is(':checked')) {
        $productColorRadioStyle.addClass('radio-style--checked');
        $productColorRadioStyleNotActive.removeClass('radio-style--checked');
      }
    });
  }
};
app.productDetails = {
  name: 'productDetails',
  description: 'your script description',
  init: function init() {
    var productDetailsButtonTextMap = new Map();
    productDetailsButtonTextMap.set(true, 'скрыть');
    productDetailsButtonTextMap.set(false, 'раскрыть');
    $('.product-details-section__toggle').on('click', function () {
      var $productDetailsSectionToggle = $(this);
      var $productDetailsSectionContent = $productDetailsSectionToggle.closest('.product-details-section__heading').next();

      if ($productDetailsSectionToggle.attr('aria-expanded') === 'false') {
        $productDetailsSectionToggle.attr('aria-expanded', true);
        $productDetailsSectionToggle.text(productDetailsButtonTextMap.get(true));
        $productDetailsSectionContent.slideDown();
      } else {
        $productDetailsSectionToggle.attr('aria-expanded', false);
        $productDetailsSectionToggle.text(productDetailsButtonTextMap.get(false));
        $productDetailsSectionContent.slideUp();
      }
    });
  }
};
app.productPopup = {
  name: 'productPopup',
  description: 'your script description',
  init: function init() {
    new Swiper('.product-popup__slider', {
      loop: true,
      slidesPerView: 1,
      speed: 1000,
      pagination: {
        el: '.swiper-pagination',
        clickable: true
      },
      navigation: {
        nextEl: '.product-popup__slider .swiper-button-next',
        prevEl: '.product-popup__slider .swiper-button-prev'
      },
      breakpoints: {
        576: {
          slidesPerView: 2
        },
        768: {
          slidesPerView: 2,
          spaceBetween: 20
        },
        1025: {
          slidesPerView: 1
        }
      },
      on: {
        slideChange: function slideChange() {
          new LazyLoad();
        }
      }
    });
  }
};
app.promoSale = {
  name: 'promoSale',
  description: 'your script description',
  init: function init() {
    new Swiper('.promo-sale__slider', {
      loop: true,
      slidesPerView: 1,
      spaceBetween: 20,
      speed: 1000,
      pagination: {
        el: '.swiper-pagination',
        clickable: true
      },
      navigation: {
        nextEl: '.promo-sale .swiper-button-next',
        prevEl: '.promo-sale .swiper-button-prev'
      }
    });
  }
};
app.scrollLink = {
  name: 'scrollLink',
  description: 'your script description',
  init: function init() {
    $(".scroll-link").on('click', function () {
      var $scrollLink = $(this);
      var scrollLinkDataAttr = $scrollLink.attr('data-link');
      var $productCard = $scrollLink.closest('.product-card');
      var $productCardInfo = $productCard.find('.product-card__info');
      var productCardInfoOffsetTop = $productCardInfo.offset().top;
      var $productCardTabNotActive = $productCardInfo.find('.product-card__tab');
      var $productCardTabsContentNotActive = $productCardInfo.find('.tabs-content');
      $productCardTabNotActive.removeClass('active');
      $productCardTabsContentNotActive.removeClass('active');
      $(".product-card__tab[href=\"#".concat(scrollLinkDataAttr, "\"]")).addClass('active');
      $("#".concat(scrollLinkDataAttr)).addClass('active');
      $("html, body").animate({
        scrollTop: productCardInfoOffsetTop + "px"
      });
      return false;
    });
  }
};
/* app.searchForm = {
  name: 'searchForm',
  description: 'your script description',
  init() {
  	
  },
}; */

app.select = {
  name: 'select',
  description: 'your script description',
  init: function init() {
    $('.select__title').on('click', function () {
      var $selectTitle = $(this);
      var $selectContent = $selectTitle.closest('.select').find('.select__content');
      var $salePopupFormItems = $selectTitle.closest('.sale-popup__form-item').siblings();
      $salePopupFormItems.find('.select__title').removeClass('active');
      $salePopupFormItems.find('.select__content').slideUp();
      $selectContent.toggleClass('active');
      $selectContent.slideToggle();
    });
    $('.select__option').on('click', function () {
      var $selectOption = $(this);
      var $selectContent = $selectOption.closest('.select__content');
      var $selectTitle = $selectContent.closest('.select').find('.select__title');
      $selectTitle.text($selectOption.find('span.select__option-text').text());
      $selectTitle.removeClass('active');
      $selectContent.slideUp();
    }); // Переключение списка магазинов в зависимости от выбранного города (карточка товара)

    $("#".concat($('.shops-availability__select .select__content').children().first().data('city'))).show();
    $('.shops-availability .select__option').on('click', function () {
      $('.shops-availability__content').hide();
      $("#".concat($(this).data('city'))).show();
    });
  }
};
app.sliderSections = {
  name: 'sliderSections',
  description: 'your script description',
  init: function init() {
    new Swiper('.popular-goods-slider', {
      loop: true,
      slidesPerView: 1,
      spaceBetween: 20,
      speed: 1000,
      navigation: {
        nextEl: '#popular-goods .swiper-button-next',
        prevEl: '#popular-goods .swiper-button-next'
      },
      breakpoints: {
        768: {
          slidesPerView: 2,
          spaceBetween: 30
        },
        1025: {
          slidesPerView: 4,
          spaceBetween: 52
        }
      },
      on: {
        slideChange: function slideChange() {
          new LazyLoad();
        }
      }
    });
    new Swiper('.catalog-new-slider', {
      loop: true,
      slidesPerView: 1,
      spaceBetween: 20,
      speed: 1000,
      navigation: {
        nextEl: '#new-goods .swiper-button-next',
        prevEl: '#new-goods .swiper-button-next'
      },
      breakpoints: {
        768: {
          slidesPerView: 2,
          spaceBetween: 30
        },
        1025: {
          slidesPerView: 4,
          spaceBetween: 52
        }
      },
      on: {
        slideChange: function slideChange() {
          new LazyLoad();
        }
      }
    });
    new Swiper('.recommended-goods-slider', {
      loop: true,
      slidesPerView: 1,
      spaceBetween: 20,
      speed: 1000,
      navigation: {
        nextEl: '#recommended-goods .swiper-button-next',
        prevEl: '#recommended-goods .swiper-button-next'
      },
      breakpoints: {
        768: {
          slidesPerView: 2,
          spaceBetween: 30
        },
        1025: {
          slidesPerView: 4,
          spaceBetween: 52
        }
      },
      on: {
        slideChange: function slideChange() {
          new LazyLoad();
        }
      }
    });
    new Swiper('.similar-goods-slider', {
      loop: true,
      slidesPerView: 1,
      spaceBetween: 20,
      speed: 1000,
      navigation: {
        nextEl: '#similar-goods .swiper-button-next',
        prevEl: '#similar-goods .swiper-button-next'
      },
      breakpoints: {
        768: {
          slidesPerView: 2,
          spaceBetween: 30
        },
        1025: {
          slidesPerView: 4,
          spaceBetween: 52
        }
      },
      on: {
        slideChange: function slideChange() {
          new LazyLoad();
        }
      }
    });
  }
};
app.yourScriptName = {
  name: 'yourScriptName',
  description: 'your script description',
  init: function init() {// your code
  }
};
app.tabs = {
  name: 'tabs',
  description: 'your script description',
  init: function init() {
    $('.tab').on('click', function () {
      var $tab = $(this);
      var $otherTabs = $tab.siblings();
      var $tabsContentActive = $("#".concat($tab.attr('aria-controls')));
      $otherTabs.removeClass('active');
      $otherTabs.attr('tabindex', -1);
      $otherTabs.attr('aria-selected', false);
      $('.tabs-content').attr('tabindex', -1);
      $('.tabs-content').removeClass('active');
      $tab.addClass('active');
      $tab.attr('aria-selected', true);
      $tab.attr('tabindex', 0);
      $tabsContentActive.attr('tabindex', 0);
      $tabsContentActive.addClass('active');
    });
  }
};
app.tooltip = {
  name: 'tooltip',
  description: 'your script description',
  init: function init() {
    $('.tooltip__btn').hover(function () {
      var $tooltipBtn = $(this);
      var $tooltip = $tooltipBtn.closest('.tooltip');
      var $tooltipContent = $tooltip.find('.tooltip__content');
      $tooltipContent.fadeToggle('slow');
    });
  }
};
app.validation = {
  name: 'validation',
  description: 'your script description',
  init: function init() {
    // validation
    $.validator.addMethod("minlenghtphone", function (value, element) {
      return value.replace(/\D+/g, '').length > 10;
    });
    $.validator.addMethod("requiredphone", function (value, element) {
      return value.replace(/\D+/g, '').length > 1;
    });

    function validateForms(form) {
      var _messages;

      $(form).validate({
        rules: {
          name: "required",
          surname: "required",
          phone: {
            requiredphone: true,
            minlenghtphone: true
          },
          user_agree: "required",
          email: "required",
          login_email: "required",
          subscribe_email: {
            required: true,
            email: true
          },
          password: "required",
          repeat_password: {
            required: true,
            equalTo: '#password'
          },
          new_password: "required",
          repeat_new_password: {
            required: true,
            equalTo: '#new_password'
          },
          city: "required",
          index: "required",
          street: "required",
          home: "required",
          flat: "required"
        },
        messages: (_messages = {
          name: "Пожалуйста, заполните обязательное поле.",
          surname: "Пожалуйста, заполните обязательное поле.",
          phone: {
            requiredphone: "Пожалуйста, заполните обязательное поле."
          },
          user_agree: "Пожалуйста, примите пользовательское соглашение",
          email: "Пожалуйста, заполните обязательное поле.",
          login_email: "Пожалуйста, заполните поле.",
          subscribe_email: {
            required: "Пожалуйста, заполните электронную почту.",
            email: "Пожалуйста, проверьте, правильно ли указан адрес электронной почты."
          },
          password: "Пожалуйста, заполните поле.",
          repeat_password: {
            required: "Пожалуйста, заполните поле.",
            equalTo: "Пароли не совпадают."
          },
          repeat_new_password: {
            required: "Пожалуйста, заполните поле.",
            equalTo: "Пароли не совпадают."
          },
          new_password: "Пожалуйста, заполните поле."
        }, _defineProperty(_messages, "repeat_new_password", "Пароли не совпадают."), _defineProperty(_messages, "city", "Пожалуйста, заполните обязательное поле."), _defineProperty(_messages, "index", "Пожалуйста, заполните поле."), _defineProperty(_messages, "street", "Пожалуйста, заполните поле."), _defineProperty(_messages, "home", "Пожалуйста, заполните поле."), _defineProperty(_messages, "flat", "Пожалуйста, заполните поле."), _messages)
      });
    }

    validateForms('#subscribe-form form');
    validateForms('#auth form');
    validateForms('#register form');
    validateForms('.basket-page form');
    validateForms('#password-change form');
    validateForms('#size-subscribe-popup form');
    validateForms('#discount-popup form');
    validateForms('#personal-data');
    validateForms('#contact-data');

    $.fn.setCursorPosition = function (pos) {
      if ($(this).get(0).setSelectionRange) {
        $(this).get(0).setSelectionRange(pos, pos);
      } else if ($(this).get(0).createTextRange) {
        var range = $(this).get(0).createTextRange();
        range.collapse(true);
        range.moveEnd('character', pos);
        range.moveStart('character', pos);
        range.select();
      }
    }; //mask


    $("input[name=phone]").on('click', function () {
      $(this).setCursorPosition(4);
    }).mask("+7 (999) 999-99-99");
  }
};
app.pickupFilters = {
  name: 'pickupFilters',
  description: 'your script description',
  init: function init() {
    $(document).on('click', '.pickup-filters__item-remove', function () {
      var $removeBtn = $(this);
      $removeBtn.prev().find('input[type=checkbox]').prop('checked', false);
      $removeBtn.remove();
    });
    $('.pickup-filters__item-box .check-box').on('change', function () {
      var $checkbox = $(this);

      if ($checkbox.is(':checked')) {
        $checkbox.parent().after('<button class="pickup-filters__item-remove" type="button"><svg viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg" ><path fill-rule="evenodd" clip-rule="evenodd" d="M10 1L9 0L5 4L1 0L0 1L4 5L0 9L1 10L5 6L9 10L10 9L6 5L10 1Z" /></svg></button>');
      } else {
        $checkbox.parent().next().remove();
      }
    });
  }
};
app.addLibs = {
  name: 'addLibs',
  description: 'connect the script library dynamically',
  addScriptFile: function addScriptFile(nameFile, callback) {
    var body = document.getElementsByTagName('body')[0];
    var script = document.createElement('script');

    script.onload = function () {
      return callback && callback();
    };

    script.src = "".concat(app.pathToLibsFiles, "/js/").concat(nameFile, ".js");
    body.appendChild(script);
  },
  addStyleFile: function addStyleFile(nameFile) {
    var appCss = document.getElementById('app-css');
    var link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = "".concat(app.pathToLibsFiles, "/css/").concat(nameFile, ".css");
    appCss.before(link);
  },
  initScript: function initScript(nameFile, nameLib, callback) {
    var hasLibs = null;
    var scripts = document.querySelectorAll('script');
    scripts.forEach(function (el) {
      var str = el.getAttribute('src');

      if (str) {
        if (str.indexOf(nameFile) >= 0) {
          hasLibs = true;
        }
      }
    });

    if (!hasLibs) {
      this.addScriptFile(nameFile, callback);
    } else {
      var timerId = setInterval(function () {
        if (window[nameLib] || window.jQuery && jQuery()[nameLib]) {
          callback();
          clearInterval(timerId);
        }
      }, 1);
    }
  },
  initStyle: function initStyle(nameFile) {
    var hasLibs = null;
    var link = document.querySelectorAll('link');
    link.forEach(function (el) {
      var str = el.getAttribute('src');

      if (str) {
        if (str.indexOf(nameFile) >= 0) {
          hasLibs = true;
        }
      }
    });

    if (!hasLibs) {
      this.addStyleFile(nameFile);
    }
  }
};

(function ($) {
  $(function () {
    new LazyLoad(); // prevent gallery slider crashing after fancybox close

    $('[data-fancybox="gallery"]').fancybox({
      backFocus: false
    });
    app.select.init();
    app.tabs.init();
    app.validation.init();
    app.burger.init();
    app.promoSale.init();
    app.iconsSlider.init();
    app.sliderSections.init();
    app.instagram.init();
    app.otherNews.init();
    app.blogTextSlider.init();
    app.catalogCard.init();
    app.catalogFilters.init();
    app.asideFilters.init();
    app.productCard.init();
    app.counter.init();
    app.productPopup.init();
    app.productDetails.init();
    app.popup.init();
    app.checkout.init();
    app.faq.init();
    app.feedback.init();
    app.pageup.init();
    app.auth.init();
    app.pickupFilters.init();
    app.basketTotal.init();
    app.pageNav.init();
    app.scrollLink.init();
    app.tooltip.init();
  });
})(jQuery);
//# sourceMappingURL=app.min.js.map
